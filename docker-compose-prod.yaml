services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: inventaris_udang_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: serverdev
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: inventaris_udang_prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U serverdev -d inventaris_udang_prod"]
      interval: 10s
      timeout: 5s
      retries: 5


  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventaris_udang_app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      NODE_ENV: ${NODE_ENV:-production}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
    volumes:
      - app_logs:/app/logs
      - app_backups:/backups
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "npx prisma migrate deploy && npm run db:seed && node server.js"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.25"
          memory: 256M

volumes:
  postgres_data:
    driver: local
  postgres_backups:
    driver: local
  app_logs:
    driver: local
  app_backups:
    driver: local
